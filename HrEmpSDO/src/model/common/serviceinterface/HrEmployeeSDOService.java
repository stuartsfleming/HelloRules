package model.common.serviceinterface;

import java.math.BigDecimal;

import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.soap.SOAPBinding;

import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import model.common.EmployeesViewSDO;

import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.common.service.types.ProcessControl;
import oracle.jbo.common.service.types.ProcessData;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;
import oracle.webservices.annotations.SDODatabinding;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 13 22:41:33 EST 2013
// ---------------------------------------------------------------------
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.WRAPPED, style = SOAPBinding.Style.DOCUMENT)
@PortableWebService(targetNamespace="/model/common/", name="HrEmployeeSDOService",
    wsdlLocation="model/common/serviceinterface/HrEmployeeSDOService.wsdl")
@SDODatabinding(schemaLocation="model/common/serviceinterface/HrEmployeeSDOService.xsd")
public interface HrEmployeeSDOService {

    public static final String NAME = "{/model/common/}HrEmployeeSDOService";

    @WebMethod(action="/model/common/getEmployeesView1", operationName="getEmployeesView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="getEmployeesView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="getEmployeesView1Response")
    @WebResult(name="result")
    EmployeesViewSDO getEmployeesView1(@WebParam(mode = WebParam.Mode.IN,
            name="employeeId")
        Integer employeeId) throws ServiceException;

    @WebMethod(action="/model/common/createEmployeesView1", operationName="createEmployeesView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="createEmployeesView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="createEmployeesView1Response")
    @WebResult(name="result")
    EmployeesViewSDO createEmployeesView1(@WebParam(mode = WebParam.Mode.IN,
            name="employeesView1")
        EmployeesViewSDO employeesView1) throws ServiceException;

    @WebMethod(action="/model/common/updateEmployeesView1", operationName="updateEmployeesView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="updateEmployeesView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="updateEmployeesView1Response")
    @WebResult(name="result")
    EmployeesViewSDO updateEmployeesView1(@WebParam(mode = WebParam.Mode.IN,
            name="employeesView1")
        EmployeesViewSDO employeesView1) throws ServiceException;

    @WebMethod(action="/model/common/deleteEmployeesView1", operationName="deleteEmployeesView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="deleteEmployeesView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="deleteEmployeesView1Response")
    void deleteEmployeesView1(@WebParam(mode = WebParam.Mode.IN, name="employeesView1")
        EmployeesViewSDO employeesView1) throws ServiceException;

    @WebMethod(action="/model/common/mergeEmployeesView1", operationName="mergeEmployeesView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="mergeEmployeesView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="mergeEmployeesView1Response")
    @WebResult(name="result")
    EmployeesViewSDO mergeEmployeesView1(@WebParam(mode = WebParam.Mode.IN,
            name="employeesView1")
        EmployeesViewSDO employeesView1) throws ServiceException;

    @WebMethod(action="/model/common/findEmployeesView1", operationName="findEmployeesView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="findEmployeesView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="findEmployeesView1Response")
    @WebResult(name="result")
    List<EmployeesViewSDO> findEmployeesView1(@WebParam(mode = WebParam.Mode.IN,
            name="findCriteria")
        FindCriteria findCriteria, @WebParam(mode = WebParam.Mode.IN, name="findControl")
        FindControl findControl) throws ServiceException;

    @WebMethod(action="/model/common/processEmployeesView1", operationName="processEmployeesView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="processEmployeesView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="processEmployeesView1Response")
    @WebResult(name="result")
    List<EmployeesViewSDO> processEmployeesView1(@WebParam(mode = WebParam.Mode.IN,
            name="changeOperation")
        String changeOperation, @WebParam(mode = WebParam.Mode.IN, name="employeesView1")
        List<EmployeesViewSDO> employeesView1, @WebParam(mode = WebParam.Mode.IN,
            name="processControl")
        ProcessControl processControl) throws ServiceException;

    @WebMethod(action="/model/common/processCSEmployeesView1", operationName="processCSEmployeesView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="processCSEmployeesView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="processCSEmployeesView1Response")
    @WebResult(name="result")
    ProcessData processCSEmployeesView1(@WebParam(mode = WebParam.Mode.IN,
            name="processData")
        ProcessData processData, @WebParam(mode = WebParam.Mode.IN, name="processControl")
        ProcessControl processControl) throws ServiceException;

    @WebMethod(action="/model/common/findEmployeesView1IamManager",
        operationName="findEmployeesView1IamManager")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="findEmployeesView1IamManager")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="findEmployeesView1IamManagerResponse")
    @WebResult(name="result")
    List<EmployeesViewSDO> findEmployeesView1IamManager(@WebParam(mode = WebParam.Mode.IN,
            name="findCriteria")
        FindCriteria findCriteria, @WebParam(mode = WebParam.Mode.IN, name="OtherEmployee")
        BigDecimal OtherEmployee, @WebParam(mode = WebParam.Mode.IN, name="Me")
        BigDecimal Me, @WebParam(mode = WebParam.Mode.IN, name="findControl")
        FindControl findControl) throws ServiceException;
}
